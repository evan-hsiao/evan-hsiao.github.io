import{_ as s,o as a,c as l,a as n}from"./app.ee1d1b16.js";const p="/assets/fastapi_docs.f4954e33.png",o="/assets/database.ef78f579.png",e="/assets/model_bind_engine.5318120f.png",t="/assets/get_select_range.a6f350e8.png",u=JSON.parse('{"title":"與資料庫對話 ( 範例 CRUD )","description":"","frontmatter":{},"headers":[{"level":2,"title":"環境安裝","slug":"環境安裝","link":"#環境安裝","children":[]},{"level":2,"title":"創建需要文件說明","slug":"創建需要文件說明","link":"#創建需要文件說明","children":[]},{"level":2,"title":"共用核對欄位 schema.py","slug":"共用核對欄位-schema-py","link":"#共用核對欄位-schema-py","children":[]},{"level":2,"title":"Read 讀取 ( get )","slug":"read-讀取-get","link":"#read-讀取-get","children":[{"level":3,"title":"開始建立 crud.py","slug":"開始建立-crud-py","link":"#開始建立-crud-py","children":[]}]},{"level":2,"title":"引到 路由 內 main.py 或 router.py","slug":"引到-路由-內-main-py-或-router-py","link":"#引到-路由-內-main-py-或-router-py","children":[{"level":3,"title":"分成3段 :","slug":"分成3段","link":"#分成3段","children":[]},{"level":3,"title":"參考","slug":"參考","link":"#參考","children":[]}]}],"relativePath":"backend_develop/fastapi/example_crud.md","lastUpdated":1685410736000}'),c={name:"backend_develop/fastapi/example_crud.md"},r=n('<h1 id="與資料庫對話-範例-crud" tabindex="-1">與資料庫對話 ( 範例 CRUD ) <a class="header-anchor" href="#與資料庫對話-範例-crud" aria-hidden="true">#</a></h1><p>延續幾篇內容，以連接 mysql 直接製作常見的範例CRUD。 <img src="'+p+'" alt="crud"></p><h2 id="環境安裝" tabindex="-1">環境安裝 <a class="header-anchor" href="#環境安裝" aria-hidden="true">#</a></h2><ul><li>venv</li><li>FastAPI、Uvicorn、Sqlalchemy</li><li>pymysql 或其他連接sql的模組 ( 例如 : mysql-connector-python )</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果是sqlite db不需要安裝其他模組</p></div><h2 id="創建需要文件說明" tabindex="-1">創建需要文件說明 <a class="header-anchor" href="#創建需要文件說明" aria-hidden="true">#</a></h2><p>前幾篇文中都一直在提到下方這兩個檔案內容周旋。</p><ul><li><code>database.py</code> 連結資料庫的設定檔，有些人會把檔名命成 <code>config.py</code> 我也覺得合理。</li><li><code>model.py</code> 資料表模組。</li></ul><p>再來是以下這兩份文件:</p><ul><li><code>schema.py</code> 共用核對欄位，查核或檢測輸入類別與資料表是否對應，欄位與 <code>model.py</code> 一樣，僅差別在宣告方式不同。</li><li><code>crud.py</code> 處理資料表函式。</li></ul><p>就像下方的關聯圖一樣，最終紅色箭頭的指向。 <img src="'+o+`" alt="er_diagram"></p><h2 id="共用核對欄位-schema-py" tabindex="-1">共用核對欄位 <code>schema.py</code> <a class="header-anchor" href="#共用核對欄位-schema-py" aria-hidden="true">#</a></h2><p>可先參考 <a href="https://fastapi.tiangolo.com/tutorial/sql-databases/" target="_blank" rel="noreferrer">官方</a> 文件。</p><p>稍微提一下class類別為何會拆分<code>ItemBase</code>、<code>ItemCreate</code>、<code>Item</code>三個的作用。</p><ol><li>在<code>ItemBase</code>類別，用在 get讀取、create創建時有共同的屬性。</li><li>在<code>ItemCreate</code>類別，用來 create創建資料時使用，<strong>繼承 ItemBase 類別內的屬性</strong>，在 create創建資料 時，<strong>必須考量兩個 class 類別內的屬性</strong>。</li><li>在<code>Item</code>類別，用在查詢時，就不會顯示建檔時的<strong>敏感資訊 ( 例如: password )</strong>。</li><li><code>Item</code>內的<code>Config</code>，純粹只是要開啟 Pydantic 的 orm 模式。</li></ol><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ItemBase</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">BaseModel</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    email</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">str</span></span>
<span class="line"><span style="color:#A6ACCD;">    title</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ItemCreate</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ItemBase</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    password</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Item</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ItemBase</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">id</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">    item</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Item</span><span style="color:#89DDFF;">]=[]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        orm_mode</span><span style="color:#89DDFF;">=True</span></span>
<span class="line"></span></code></pre></div><h2 id="read-讀取-get" tabindex="-1">Read 讀取 ( get ) <a class="header-anchor" href="#read-讀取-get" aria-hidden="true">#</a></h2><p>萬事起頭<code>get</code>，先從讀取資料開始，順便測試能否連上資料表，一般取用資料會使用3種方法 :</p><ol><li>取用全部。</li><li>取單筆。</li><li>取區間。</li></ol><p>以下會舉例使用方法的函式。</p><hr><h3 id="開始建立-crud-py" tabindex="-1">開始建立 <code>crud.py</code> <a class="header-anchor" href="#開始建立-crud-py" aria-hidden="true">#</a></h3><p>先引入<code>sqlalchemy</code> 套件與 <code>models、schema</code> 設定好的資料庫內容。</p><ul><li><strong>sqlalchemy.orm</strong> 是使用 <strong>orm</strong> 方法與資料庫對話。</li><li><strong>models</strong> 是引入資料表模組。</li><li><strong>schema</strong> 共同核對欄位。</li></ul><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># crud.py</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> sqlalchemy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">orm </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Session</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> models </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> products</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> schema</span></span>
<span class="line"></span></code></pre></div><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-LT-uE" id="tab-UJtKoGS" checked="checked"><label for="tab-UJtKoGS">取全部資料</label><input type="radio" name="group-LT-uE" id="tab-W8EJrp0"><label for="tab-W8EJrp0">取單筆資料</label><input type="radio" name="group-LT-uE" id="tab-xQZDQ5d"><label for="tab-xQZDQ5d">取區間資料</label></div><div class="blocks"><div class="language-py active"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_all</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">db</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Session</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> db</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">products</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 以下是定義取單筆資料使用 \`id\` 來篩選。</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_one</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">db</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">item_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> db</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">products</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">products</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">==</span><span style="color:#82AAFF;">item_id</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 區間資料當然要先定義 :起始值 (\`get_start\`)、結束值 (\`the_end\`)。</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_db_s</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">db</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">start</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">end</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> db</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">query</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">products</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">offset</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">get_start</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">limit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">the_end</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div></div></div><div class="tip custom-block"><p class="custom-block-title">get 的總結:</p><ol><li>採用 Session 來定義 db 。</li><li>採用 query 來取用 model 內的資料表。</li><li>延續2. ，採用 filter()、offset()、limit() 來篩選內容。</li><li>採用 first()、all() 來呈現篩選後的資料。</li></ol></div><h2 id="引到-路由-內-main-py-或-router-py" tabindex="-1">引到 <em>路由</em> 內 <code>main.py</code> 或 <code>router.py</code> <a class="header-anchor" href="#引到-路由-內-main-py-或-router-py" aria-hidden="true">#</a></h2><p>上述函式定義後，接這要引到<em>路由</em>才能使用。</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> fastapi </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> HTTPException</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">Depends</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> crud</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> schema</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> database </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> SessionLocal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> engine</span></span>
<span class="line"></span></code></pre></div><p>開啟資料庫，讓session與資料庫對話，並確保取得資料後即關閉，避免資源消耗。這段可放在<code>main.py</code>或<code>router.py</code>內，只要有路由及取用資料庫的檔案中。</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 建立資料庫</span></span>
<span class="line"><span style="color:#A6ACCD;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Base</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metadata</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create_all</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 取用資料庫，這裡攸關多方連線時，資料操作關閉，避免延遲。</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_db</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    db </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SessionLocal</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#A6ACCD;"> db</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">finally</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        db</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Base</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">metadata</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create_all</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bind</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">engine</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>這段是叫 sqlalchemy 檢查資料庫內有沒有 <code>models</code> 裡面定義的資料表，如果沒有，就會在裡面建立。 <img src="`+e+`" alt="sqlalchemy"></p></div><h3 id="分成3段" tabindex="-1">分成3段 : <a class="header-anchor" href="#分成3段" aria-hidden="true">#</a></h3><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-zaIiQ" id="tab-uxp5dlQ" checked="checked"><label for="tab-uxp5dlQ">取用全部</label><input type="radio" name="group-zaIiQ" id="tab-XxfOnRt"><label for="tab-XxfOnRt">取用單筆</label><input type="radio" name="group-zaIiQ" id="tab-Yzcwn8s"><label for="tab-Yzcwn8s">取用區間</label></div><div class="blocks"><div class="language-py active"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/path</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">response_model</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">list</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">schema</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">get_item</span><span style="color:#89DDFF;">])</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">read_all</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">db</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Session</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">Depends</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">get_db</span><span style="color:#89DDFF;">)):</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> crud</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_all </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> db </span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/path/</span><span style="color:#F78C6C;">{id}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">response_model</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">schema</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">get_item</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">read_one</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">db</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Session</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">Depends</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">get_db</span><span style="color:#89DDFF;">)):</span></span>
<span class="line"><span style="color:#A6ACCD;">    item_name</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">crud</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_one </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">db</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">item_id</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">id</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 判斷id資料是否不存在</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> item_name </span><span style="color:#89DDFF;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">None:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">raise</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HTTPException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">status_code</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">404</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">detail</span><span style="color:#89DDFF;">=</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;Not Found id:</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">id</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> item_name</span></span>
<span class="line"></span></code></pre></div><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/path</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">response_model</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">list</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">schema</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">get_item</span><span style="color:#89DDFF;">])</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">read_db_s</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">get_start</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">the_end</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">db</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Session</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">Depends</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">get_db</span><span style="color:#89DDFF;">)):</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> crud</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_db_s </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">db</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">start</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">get_start </span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">end</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">the_end</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div></div></div><p><img src="`+t+`" alt="selsec_range"></p><div class="tip custom-block"><p class="custom-block-title">路由總結</p><ul><li>@app.get (&#39;路由&#39;，response_model=清單 [ schema 自定義項目])</li><li>def 定義方法 ( 篩選值 , 資料庫名 )。</li><li>篩選資料庫內容 : 定義操作.操作方法 ( 資料庫, 篩選值 )。</li><li>使用判斷資料正確性。</li><li>return 回饋篩選後的內容。</li></ul></div><div class="warning custom-block"><p class="custom-block-title">提醒</p><p>建立路由，這裡兩個路由差異在於 <code>{ id }</code>、 <code>list</code> 參數，雖然都是使用相同的 schema define，在 CRUD 的方法中都會用到，要記住。</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 多項數據</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/path</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">response_model</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">list</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">schema</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">def</span><span style="color:#89DDFF;">])</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 單項數據 (指定id)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/path/</span><span style="color:#F78C6C;">{id}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">response_model</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">schema</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">def</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div></div><hr><h3 id="參考" tabindex="-1">參考 <a class="header-anchor" href="#參考" aria-hidden="true">#</a></h3><ul><li><a href="https://ahmed-nafies.medium.com/tutorial-fastapi-with-sqlalchemy-async-orm-and-alembic-2fa68102f82d" target="_blank" rel="noreferrer">FastAPI with SQLAlchemy Async ORM and Alembic</a></li><li><a href="https://codevoweb.com/crud-restful-api-server-with-python-fastapi-and-mongodb/" target="_blank" rel="noreferrer">CRUD RESTful API Server with Python, FastAPI, and MongoDB</a></li><li><a href="https://codevoweb.com/crud-restful-api-server-with-python-fastapi-and-postgresql/" target="_blank" rel="noreferrer">CRUD RESTful API Server with Python, FastAPI, and PostgreSQL</a></li><li><a href="https://www.youtube.com/watch?v=dJ4GiwNtvSw" target="_blank" rel="noreferrer"> FastAPI | MYSQL (CRUD Operation)</a></li><li><a href="https://www.keywordseo.com.tw/blog1/build-high-performing-apps-with-the-python-fastapi-framework/" target="_blank" rel="noreferrer">使用 PYTHON 的高性能應用程式 FASTAPI 教學</a></li><li><a href="https://www.gormanalysis.com/blog/building-a-simple-crud-application-with-fastapi/" target="_blank" rel="noreferrer">Building A Simple CRUD Application With FastAPI</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10295371" target="_blank" rel="noreferrer">簡單搞懂Restful API Python 實作範例</a></li></ul>`,42),i=[r];function y(F,D,d,A,C,m){return a(),l("div",null,i)}const g=s(c,[["render",y]]);export{u as __pageData,g as default};
